// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package product

import (
	"sync"

	"github.com/ecodeclub/webook/internal/product/internal/repository"
	"github.com/ecodeclub/webook/internal/product/internal/repository/dao"
	"github.com/ecodeclub/webook/internal/product/internal/service"
	"github.com/ecodeclub/webook/internal/product/internal/web"
	"github.com/ego-component/egorm"
	"github.com/google/wire"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitHandler(db *gorm.DB) *web.Handler {
	productDAO := InitTablesOnce(db)
	productRepository := repository.NewProductRepository(productDAO)
	serviceService := service.NewService(productRepository)
	handler := web.NewHandler(serviceService)
	return handler
}

// wire.go:

var HandlerSet = wire.NewSet(repository.NewProductRepository, InitTablesOnce, service.NewService, web.NewHandler)

var once = &sync.Once{}

func InitTablesOnce(db *egorm.Component) dao.ProductDAO {
	once.Do(func() {
		_ = dao.InitTables(db)
	})
	return dao.NewProductGORMDAO(db)
}

type Handler = web.Handler
